version: "3.9"

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: resume
      POSTGRES_PASSWORD: resume
      POSTGRES_DB: resume
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U resume"]
      interval: 5s
      timeout: 5s
      retries: 10

  api:
    build: .
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: resume
      POSTGRES_PASSWORD: resume
      POSTGRES_DB: resume
      JWT_SECRET_KEY: change_me
      ACCESS_TOKEN_EXPIRE_MINUTES: 1440
      LOG_LEVEL: INFO
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request,sys; sys.exit(0 if urllib.request.urlopen('http://localhost:8000/docs').getcode()==200 else 1)"]
      interval: 5s
      timeout: 5s
      retries: 20

  frontend:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    environment:
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"
    ports:
      - "5173:5173"
    depends_on:
      api:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"
